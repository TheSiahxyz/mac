#!/bin/sh

TARGET_PATH1="$HOME/.secret"
TARGET_PATH2="/mnt/extra/videos"
MOUNT_PATH1="$HOME/Personal"
MOUNT_PATH2="/mnt/extra/videos"
SUB_MOUNT_PATH1="${MOUNT_PATH1#$HOME/}"
SUB_MOUNT_PATH2="${MOUNT_PATH2#/mnt/extra/}"

mount_encrypted() {
    target_path="$1"
    mount_path="$2"
    echo "$PASSPHRASE" | sudo mount -t ecryptfs "$target_path" "$mount_path" \
        -o ecryptfs_cipher=aes,ecryptfs_key_bytes=32,ecryptfs_passthrough=no,ecryptfs_enable_filename_crypto=yes,ecryptfs_sig=$ECRYPTFS_SIG,ecryptfs_fnek_sig=$FNEK_SIG,passwd=$(printf '%s' "$PASSPHRASE")
}
# Unmounting process with streamlined error handling
mount | grep -q " $MOUNT_PATH1 " && mount | grep -q " $MOUNT_PATH2 " && {
    sudo umount "$MOUNT_PATH1" && sudo umount "$MOUNT_PATH2" && notify-send "üìÅ Locked:" "$SUB_MOUNT_PATH1\n$SUB_MOUNT_PATH2" ||
    {
        lsblkoutput="$(lsblk -nrpo "name,type,size,mountpoint")"
        mounteddrives="$(echo "$lsblkoutput" | awk '($2=="part"||$2="crypt")&&$4!~/\/boot|\/home$|SWAP/&&length($4)>1{printf "üíæ%s (%s)\n",$4,$3}')"
        allunmountable="$(echo "$mounteddrives" | sed "/^$/d;s/ *$//")"
        echo $allunmountable
        path="$(echo "$allunmountable" | sed "s/\/home\/$USER\///g;s/\/mnt\/extra\///g")"
        notify-send "‚ùó Unable to lock" "Mounted: $path"
    }
} || {
    ECRYPTFS_SIG=$(sudo cat /root/.ecryptfs/sig-cache.txt)
    FNEK_SIG=$ECRYPTFS_SIG
    PASSPHRASE=$(pass show encryption/ecryptfs)
    [ -z "$PASSPHRASE" ] && { notify-send "‚ùå Failed to retrieve passphrase." -u critical; exit 1; }
    mount_encrypted "$TARGET_PATH1" "$MOUNT_PATH1" && mount_encrypted "$TARGET_PATH2" "$MOUNT_PATH2" && \
        notify-send "üìÇ Unlocked:" "$SUB_MOUNT_PATH1\n$SUB_MOUNT_PATH2" || \
        notify-send "‚ùå Failed to unlock:" "$SUB_MOUNT_PATH1\n$SUB_MOUNT_PATH2" -u critical
}

# Refresh status bar
pkill -RTMIN+19 "${STATUSBAR:-dwmblocks}"
